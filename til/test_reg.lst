---------------------------------------------
8085 ASSEMBLER LISTING
Line   Addr Opcode      Label   Instruction
---------------------------------------------
0001   0000             	ORG $0
0002   0000             	            ;  Testing virtual 16-bit registers held in memory.
0003   0000             	            ;  8080 cpu is limited to 3 general purpose 16 bit registers
0004   0000             	            ;  The Threaded Interpetive Language (TIL) requires the following virtual registers.
0005   0000             	            ;  IR Instruction Register - Address of next instruction in threaded list.
0006   0000             	            ;  WA Word Address Register - word address of current keyword
0007   0000             	            ;  CA Code Address Register
0008   0000             	            ;  RS Return Stack Register
0009   0000             	            ;  SP Stack Pointer == 8080 SP
0010   0000             	            ;  PC Program Counter == 8080 PC
0011   0000             
0012   0000             	            ;  Basic definition of COLON routine
0013   0000             	            ;  PSH IR -> RS
0014   0000             	            ;  WA -> IR
0015   0000             	            ;  JMP NEXT
0016   0000             COLON
0017   0000             	            ;  **********
0018   0000             	            ;  PSH I -> RS
0019   0000             	            ;  **********
0020   0000             	            ;  get RS address to HL, then get contents of RS into DE, then copy DE to HL
0021   0000 21 2D 00    	LXI H,RS    ;  address of register RS into HL
0022   0003 5E          	MOV E,M     ;  low order to E (HL) -> E
0023   0004 2D          	DCR L       ;  bump HL for hi order
0024   0005 56          	MOV D,M     ;  hi order to D (HL) -> D
0025   0006 62          	MOV H,D     ;  Set memory pointer HL to DE (RS)
0026   0007 6B          	MOV L,E     ;  low byte
0027   0008             	            ;  Now DE == RS pointer, next grab 16 bit IR register from memory and push to RS stack.
0028   0008 11 27 00    	LXI D,IR    ;  Address of IR to DE
0029   000B 1A          	LDAX D      ;  A <- (DE)
0030   000C 2D          	DCR L       ;  RS--
0031   000D 77          	MOV M,A     ;  (HL) < IR.L
0032   000E 1C          	INR E       ;  DE++
0033   000F 1A          	LDAX D      ;  A <-(DE+1)
0034   0010 2D          	DCR L       ;  RS--
0035   0011 77          	MOV M,A     ;  (HL) <- IR.H
0036   0012             	            ;  save contents of HL to RS memory location
0037   0012 54          	MOV D,H     ;  HL = RS, SAVE HL to DE, then set HL to RS memory location.
0038   0013 5D          	MOV E,L
0039   0014 21 2D 00    	LXI H,RS
0040   0017 73          	MOV M,E     ;  write E to RS.0
0041   0018 2D          	DCR L
0042   0019 72          	MOV M,D     ;  write D to RS.1
0043   001A             	            ;  **********
0044   001A             	            ;  WA -> I
0045   001A             	            ;  **********
0046   001A 11 29 00    	LXI D,WA    ;  General form for Rx -> Ry Get Address Rx [WA]
0047   001D 21 27 00    	LXI H,IR    ;  Get address of Ry [IR]
0048   0020 1A          	LDAX D      ;  A <- Rx.L
0049   0021 77          	MOV M,A     ;  (Ry) <- A
0050   0022 2C          	INR L       ;  Rx++
0051   0023 1C          	INR E       ;  Ry++
0052   0024 1A          	LDAX D      ;  A <- Rx.L
0053   0025 77          	MOV M,A     ;  (Ry) <- A
0054   0026             	            ;  **********
0055   0026             	            ;  (TODO) JMP NEXT
0056   0026             	            ;  **********
0057   0026             
0058   0026             	            ;  **********
0059   0026             	            ;  (TODO) Write & Test POP RS -> I
0060   0026             	            ;  **********
0061   0026             
0062   0026 76          	HLT
0063   0027             
0064   0027             	            ;  Virtual Registers
0065   0027 40 01       IR	DW $140     ;  arbitrary starting values for testing. will get better numbers when building TIL.
0066   0029 AA 01       WA	DW $1AA
0067   002B 00 00       CA	DW 0
0068   002D A0 00       RS	DW $A0      ;  Return Stack Pointer at 00A0 for ease of checking in first memory page.
0069   002F             
0070   002F             	ORG $A0
0071   00A0 01 02 03 04 STACK	DB 1,2,3,4,5,6
0071   00A4 05 06       
Number of errors = 0
