---------------------------------------------
8085 ASSEMBLER LISTING
Line   Addr Opcode      Label   Instruction
---------------------------------------------
0001   0000             	ORG $0
0002   0000             	            ;  Testing virtual 16-bit registers held in memory.
0003   0000             	            ;  8080 cpu is limited to 3 general purpose 16 bit registers
0004   0000             	            ;  The Threaded Interpetive Language (TIL) requires the following virtual registers.
0005   0000             	            ;  IR Instruction Register - Address of next instruction in threaded list.
0006   0000             	            ;  WA Word Address Register - word address of current keyword
0007   0000             	            ;  CA Code Address Register
0008   0000             	            ;  RS Return Stack Register
0009   0000             	            ;  SP Stack Pointer == 8080 SP
0010   0000             	            ;  PC Program Counter == 8080 PC
0011   0000             
0012   0000             	            ;  Basic definition of COLON routine
0013   0000             	            ;  PSH IR -> RS
0014   0000             	            ;  WA -> IR
0015   0000             	            ;  JMP NEXT
0016   0000             COLON
0017   0000             	            ;  PSH I -> RS
0018   0000             	            ;  get RS address to HL, then get contents of RS into DE, then copy DE to HL
0019   0000 21 21 00    	LXI H,RS    ;  address of register RS into HL
0020   0003 5E          	MOV E,M     ;  low order to E (HL) -> E
0021   0004 2D          	DCR L       ;  bump HL for hi order
0022   0005 56          	MOV D,M     ;  hi order to D (HL) -> D
0023   0006 62          	MOV H,D     ;  Set memory pointer HL to DE (RS)
0024   0007 6B          	MOV L,E     ;  low byte
0025   0008             	            ;  Now DE == RS pointer, next grab 16 bit IR register from memory and push to RS stack.
0026   0008 11 1B 00    	LXI D,IR    ;  Address of IR to DE
0027   000B 1A          	LDAX D      ;  A <- (DE)
0028   000C 2D          	DCR L       ;  RS--
0029   000D 77          	MOV M,A     ;  (HL) < IR.L
0030   000E 1C          	INR E       ;  DE++
0031   000F 1A          	LDAX D      ;  A <-(DE+1)
0032   0010 2D          	DCR L       ;  RS--
0033   0011 77          	MOV M,A     ;  (HL) <- IR.H
0034   0012             	            ;  save contents of HL to RS memory location
0035   0012 54          	MOV D,H     ;  HL = RS, SAVE HL to DE, then set HL to RS memory location.
0036   0013 5D          	MOV E,L
0037   0014 21 21 00    	LXI H,RS
0038   0017 73          	MOV M,E     ;  write E to RS.0
0039   0018 2D          	DCR L
0040   0019 72          	MOV M,D     ;  write D to RS.1
0041   001A             
0042   001A             	            ;  WA -> I
0043   001A             
0044   001A             	            ;  JMP NEXT
0045   001A             	            ;  End for now
0046   001A 76          	HLT
0047   001B             
0048   001B             	            ;  Virtual Registers
0049   001B 40 01       IR	DW $140 ;arbitrary starting values for testing. will get better numbers when building TIL.
0050   001D 00 00       WA	DW 0
0051   001F 00 00       CA	DW 0
0052   0021 A0 00       RS	DW $A0	; Return Stack Pointer at 00A0 for ease of checking in first memory page.
0053   0023             
0054   0023             	ORG $A0
0055   00A0 01 02 03 04 STACK	DB 1,2,3,4,5,6
0055   00A4 05 06       
Number of errors = 0
